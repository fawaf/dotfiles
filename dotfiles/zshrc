# rc -- zsh
# vim:fdm=marker
# useful links: {{{
#  - http://gentoo-wiki.com/Talk:Screen
#  - http://www.gentoo.org/doc/en/zsh.xml
#  - http://aperiodic.net/phil/prompt/
#  - http://www.cs.elte.hu/zsh-manual/zsh_15.html
#  - http://www.cs.elte.hu/zsh-manual/zsh_16.html
#  - http://grml.org/zsh/zsh-lovers.html
#  - http://wiki.archlinux.org/index.php/Zsh
#  - http://zshwiki.org/home/examples/compquickstart
# }}}

for file in $HOME/.zsh.pre.d/*
do
  test -r "$file" && source "$file"
done

for file in $HOME/.zsh.d/*
do
  test -r "$file" && source "$file"
done

# menu-select settings {{{
bindkey '^d' menu-select    # Use ^D for more useful tab completion
bindkey -M menuselect '^o' accept-and-infer-next-history
bindkey -M menuselect h backward-char
bindkey -M menuselect j down-line-or-history
bindkey -M menuselect k up-line-or-history
bindkey -M menuselect l forward-char
# }}}

# Set variables {{{
# use current user@host as the prefix of the current tab title
TAB_TITLE_PREFIX="${USER}@${REALHOST}:"
export TAB_TITLE_PREFIX
# when at the shell prompt, show a truncated version of the current path (with
# standard ~ replacement) as the rest of the title.
TAB_TITLE_PROMPT='`print -Pn "%~" | sed "s:\([~/][^/]*\)/.*/:\1...:"`'
export TAB_TITLE_PROMPT
# when running a command, show the title of the command as the rest of the
# title (truncate to drop the path to the command)
TAB_TITLE_EXEC='`case $cmd[1]:t in ; "sudo") echo $cmd[2]:t;; *) echo $cmd[1]:t;; esac`'
export TAB_TITLE_EXEC

# use the current path (with standard ~ replacement) in square brackets as the
# prefix of the tab window hardstatus.
TAB_HARDSTATUS_PREFIX='`print -Pn "[%~] "`'
export TAB_HARDSTATUS_PREFIX
# when at the shell prompt, use the shell name (truncated to remove the path to
# the shell) as the rest of the title
TAB_HARDSTATUS_PROMPT='$SHELL:t'
export TAB_HARDSTATUS_PROMPT
# when running a command, show the command name and arguments as the rest of
# the title
TAB_HARDSTATUS_EXEC='$cmd'
export TAB_HARDSTATUS_EXEC
# }}}

# Environment {{{
umask 022   # Deny group/world rwx by default (multiuser systems)
# }}}

# Miscellaneous {{{
type mesg > /dev/null
if [ $? -eq 0 ]
then
    mesg n
fi

rationalise-dot() {
    if [[ "$LBUFFER" == *.. ]]
    then
        LBUFFER+=/..
    else
        LBUFFER+=.
    fi
}
zle -N rationalise-dot
bindkey . rationalise-dot

DIRSTACKSIZE=2000 # maximum size of directory stack
export DIRSTACKSIZE
HISTSIZE=5000     # Maximum size of history list
export HISTSIZE
SAVEHIST=7000     # Save the last x commands
export SAVEHIST
LISTMAX=0         # Only ask if completion listing would scroll off screen
export LISTMAX
REPORTTIME=60     # Give timing statistics for programs that take longer than a minute to run
export REPORTTIME
HISTFILE="$HOME/.zhistory_$HOSTNAME"
export HISTFILE
unset LS_COLORS
# }}}

source $HOME/.zsh/k/k.sh

autoload zcalc

# Sources {{{
source $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
[ -f /usr/local/bin/aws_zsh_completer.sh ] && source /usr/local/bin/aws_zsh_completer.sh

source_os_dotfiles zshrc
# }}}

if [[ "$HOST_IP" == "" ]]
then
    echo_color red "No IP address(es) detected"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

test $commands[kubectl] && source <(kubectl completion zsh)

cd ~

for file in $HOME/.zsh.post.d/*
do
  test -r "$file" && source "$file"
done
